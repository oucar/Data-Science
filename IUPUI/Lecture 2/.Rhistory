source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
install.packages("tidyverse")
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
read.csv("/Users/onurucar/Desktop/Github/Data-Science/IUPUI/Lecture 2/IMDB-MovieData.csv")
data <- read.csv("/Users/onurucar/Desktop/Github/Data-Science/IUPUI/Lecture 2/IMDB-MovieData.csv")
newData <- filter(data, sleep_total >= 16)
metaScoreGreaterThan90 <- filter(data, Metascore >= 90)
metaScoreGreaterThan90 <- filter(data, $Metascore >= 90)
# we will use dplyr inside tidyverse
# https://genomicsclass.github.io/book/pages/dplyr_tutorial.html
install.packages("dplyr")
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
# we will use dplyr inside tidyverse
# https://genomicsclass.github.io/book/pages/dplyr_tutorial.html
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
install.packages("dplyr")
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
data <- read.csv("/Users/onurucar/Desktop/Github/Data-Science/IUPUI/Lecture 2/IMDB-MovieData.csv")
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions.))
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
# we will use dplyr inside tidyverse
# https://genomicsclass.github.io/book/pages/dplyr_tutorial.html
install.packages("dplyr")
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions.))
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions.), na.rm = TRUE)
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(`Revenue (Millions)`), na.rm = TRUE)
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(`Revenue Millions), na.rm = TRUE)
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions.), na.rm = T)
data <- read.csv("/Users/onurucar/Desktop/Github/Data-Science/IUPUI/Lecture 2/IMDB-MovieData.csv")
# example of filter
metaScoreGreaterThan90 <- filter(data, Metascore >= 90)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions.), na.rm = T)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions..), na.rm = T) %>%
ggplot
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
ggplot() + geom_point(aes(x=Year, y=average_revenue)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions..), na.rm = T) %>% ggplot() + geom_point(aes(x=Year, y=average_revenue)
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
source("~/Desktop/Github/Data-Science/IUPUI/Lecture 2/rExercise.r")
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions..), na.rm = T) %>% ggplot() + geom_point(aes(x=Year, y=average_revenue))
# Which movie genre in the data has the longest avarage runtime?
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
library(dplyr)
data <- read.csv("/Users/onurucar/Desktop/Github/Data-Science/IUPUI/Lecture 2/IMDB-MovieData.csv")
# example of filter
metaScoreGreaterThan90 <- filter(data, Metascore >= 90)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions..), na.rm = T) %>% ggplot() + geom_point(aes(x=Year, y=average_revenue))
# Which movie genre in the data has the longest avarage runtime?
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Which director in the data has worked in most number of (different) years?
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions..), na.rm = T) %>% ggplot() + geom_point(aes(x=Year, y=average_revenue))
# we will use dplyr inside tidyverse
# https://genomicsclass.github.io/book/pages/dplyr_tutorial.html
install.packages("dplyr")
library(dplyr)
data <- read.csv("/Users/onurucar/Desktop/Github/Data-Science/IUPUI/Lecture 2/IMDB-MovieData.csv")
# example of filter
metaScoreGreaterThan90 <- filter(data, Metascore >= 90)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions..), na.rm = T) %>% ggplot() + geom_point(aes(x=Year, y=average_revenue))
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions..), na.rm = T) %>% ggplot2() + geom_point(aes(x=Year, y=average_revenue))
# we will use dplyr inside tidyverse
# https://genomicsclass.github.io/book/pages/dplyr_tutorial.html
install.packages("dplyr")
install.packages("dplyr")
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
data <- read.csv("/Users/onurucar/Desktop/Github/Data-Science/IUPUI/Lecture 2/IMDB-MovieData.csv")
# example of filter
metaScoreGreaterThan90 <- filter(data, Metascore >= 90)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions..), na.rm = T) %>% ggplot() + geom_point(aes(x=Year, y=average_revenue))
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions.), na.rm = T) %>% ggplot() + geom_point(aes(x=Year, y=average_revenue))
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions.), na.rm = T)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Metascore), na.rm = T)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(data, average_revenue=mean(), na.rm = T)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(), na.rm = T)
data <- read.csv("/Users/onurucar/Desktop/Github/Data-Science/IUPUI/Lecture 2/IMDB-MovieData.csv")
# example of filter
metaScoreGreaterThan90 <- filter(data, Metascore >= 90)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(), na.rm = T)
Revenue..Millions.
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Metascore), na.rm = T)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue = mean($Metascore), na.rm = T)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue = mean(Metascore), na.rm = T)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue = mean(data.Metascore), na.rm = T)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue = mean(Metascore))
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% avg = summarise(average_revenue = mean(Metascore))
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue = mean(Metascore))
# Which movie genre in the data has the longest avarage runtime?
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue = max(Metascore))
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue = max(Metascore))
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue = max(Revenue..Millions.))
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue = mean(Revenue..Millions.))
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue = mean(Revenue..Millions.), rm.na = TRUE)
# Which movie genre in the data has the longest avarage runtime?
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue = mean(Revenue..Millions.), na.rm = TRUE)
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue = mean(Revenue..Millions.), na.rm = TRUE))
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions., na.rm = T))
# Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions., na.rm = T)) %>%
ggplot() + geom_point(aes(x=Year, y=average_revenue))
# Q1: Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions., na.rm = T)) %>%
ggplot(aes(x=Year, y=average_revenue)) + geom_point()
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Then use group_by and summarise
data %>% group_by(Year)
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Then use group_by and summarise
data %>% group_by(Genre) %>% summarise(average_runtime=mean(Runtime..Minutes., na.rm = TRUE)) %>%
ggplot(aes(x=Genre, y=average_runtime)) + geom_point()
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Then use group_by and summarise
data %>% group_by(Genre) %>% summarise(average_runtime=mean(Runtime..Minutes., na.rm = TRUE))
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Then use group_by and summarise
data %>% seperate(Genre, c("G1", "G2", "G3")) %>%
group_by(G1) %>%
summarise(avg_runtime=mean(Runtime..Minutes., na.rm=T)) %>%
arrange(desc(avg_runtime))
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Then use group_by and summarise
data %>% separate(Genre, c("G1", "G2", "G3")) %>%
group_by(G1) %>%
summarise(avg_runtime=mean(Runtime..Minutes., na.rm=T)) %>%
arrange(desc(avg_runtime))
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Then use group_by and summarise
data %>% separate(Genre, c("G1", "G2", "G3")) %>%
group_by(G1) %>%
summarise(avg_runtime=mean(Runtime..Minutes., na.rm=T)) %>%
arrange(desc(avg_runtime))
# we will use dplyr inside tidyverse
# https://genomicsclass.github.io/book/pages/dplyr_tutorial.html
install.packages("dplyr")
install.packages("ggplot2")
library(dplyr)
install.packages("dplyr")
library(ggplot2)
install.packages("ggplot2")
data <- read.csv("/Users/onurucar/Desktop/Github/Data-Science/IUPUI/Lecture 2/IMDB-MovieData.csv")
install.packages("ggplot2")
# Q1: Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
# ggplot --> https://datacarpentry.org/R-ecology-lesson/04-visualization-ggplot2.html
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions., na.rm = TRUE)) %>%
ggplot(aes(x=Year, y=average_revenue)) + geom_point()
data <- read.csv("/Users/onurucar/Desktop/Github/Data-Science/IUPUI/Lecture 2/IMDB-MovieData.csv")
# example of filter
metaScoreGreaterThan90 <- filter(data, Metascore >= 90)
# we will use dplyr inside tidyverse
# https://genomicsclass.github.io/book/pages/dplyr_tutorial.html
install.packages("dplyr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
data <- read.csv("/Users/onurucar/Desktop/Github/Data-Science/IUPUI/Lecture 2/IMDB-MovieData.csv")
# example of filter
metaScoreGreaterThan90 <- filter(data, Metascore >= 90)
# Q1: Make a bar plot of the average revenue vs year
# Hint: use group_by and summarise
# na.rm removes the NA values
# ggplot --> https://datacarpentry.org/R-ecology-lesson/04-visualization-ggplot2.html
data  %>% group_by(Year) %>% summarise(average_revenue=mean(Revenue..Millions., na.rm = TRUE)) %>%
ggplot(aes(x=Year, y=average_revenue)) + geom_point()
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Then use group_by and summarise
data %>% separate(Genre, c("G1", "G2", "G3")) %>%
group_by(G1) %>%
summarise(avg_runtime=mean(Runtime..Minutes., na.rm=T)) %>%
arrange(desc(avg_runtime))
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Then use group_by and summarise
data %>% separate(Genre, c("G1", "G2", "G3")) %>%
group_by(G1) %>%
summarise(avg_runtime=mean(Runtime..Minutes., na.rm=T)) %>%
arrange(desc(avg_runtime))
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Then use group_by and summarise
data %>% separate(Genre, c("G1", "G2", "G3")) %>%
group_by(G1) %>%
summarise(avg_runtime=mean(Runtime..Minutes., na.rm=T)) %>%
arrange(desc(avg_runtime))
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Then use group_by and summarise
data %>% separate(Genre, c("G1", "G2", "G3"), sep=",") %>%
group_by(G1) %>%
summarise(avg_runtime=mean(Runtime..Minutes., na.rm=T)) %>%
arrange(desc(avg_runtime))
install.packages("tidyr")
library(tidyr)
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Then use group_by and summarise
data %>% separate(Genre, c("G1", "G2", "G3"), sep=",") %>%
group_by(G1) %>%
summarise(avg_runtime=mean(Runtime..Minutes., na.rm=T)) %>%
arrange(desc(avg_runtime))
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Then use group_by and summarise
data %>% separate(Genre, c("G1", "G2", "G3"), sep=",") %>%
group_by(G1) %>%
summarise(average_runtime=mean(Runtime..Minutes., na.rm=T)) %>%
ggplot(aes(x=Year, y=average_runtime)) + geom_point()
# Which movie genre in the data has the longest avarage runtime?
# Hint: analyze the first listed genre, which you can extract using “separate”.
# Then use group_by and summarise
data %>% separate(Genre, c("G1", "G2", "G3"), sep=",") %>%
group_by(G1) %>%
summarise(average_runtime=mean(Runtime..Minutes., na.rm=T)) %>%
