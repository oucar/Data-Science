## GGPLOT2 and TIDYVERSE
library(tidyverse)
## Do cars with big engines use more fuel than cars with small engines?
mpg
## Do cars with big engines use more fuel than cars with small engines?
?mpg
ggplot(data) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = data) + geom_point(mapping = aes(x = displ, y = hwy))
## Do cars with big engines use more fuel than cars with small engines?
# ?mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = <DATA>) + <GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))
ggplot(data = mpg)
# displ: a car's engine size, in litres
# hwy: a car's fuel efficieny on the highway
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy, color = class))
# doable, but not a good practice.
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy, size = class))
mpg %>% geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
mpg %>% geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
mpg %>% geom_point(mapping = aes(x = displ, y = hwy, shape = class))
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy, shape = class))
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy, color = "red"))
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
## FACETS
# useful for categorical variables -> splits your plot into facets
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
## FACETS
# useful for categorical variables -> splits your plot into facets
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 1)
## FACETS
# useful for categorical variables -> splits your plot into facets
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 6)
## FACETS
# useful for categorical variables -> splits your plot into facets
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 0)
## FACETS
# useful for categorical variables -> splits your plot into facets
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 100)
## FACETS
# useful for categorical variables -> splits your plot into facets
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(drv ~ cyl)
## GEOMS
# scatter plot
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy))
# smooth
mpg %>% ggplot() + geom_smooth(mapping = aes(x = displ, y = hwy))
## GEOMS
# scatter plot
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy))
## GEOMS
# scatter plot
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy))
# smooth
mpg %>% ggplot() + geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv, color = drv))
mpg %>% ggplot() + geom_smooth(mapping = aes(x = displ, y = hwy, group = drv, color = drv))
# multiple geoms in the same ggplot
mpg %>% ggplot() +
geom_point(mapping = aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(x = displ, y = hwy))
# in order to avoid code duplications
mpg %>% ggplot(mapping = aes(x = displ, y = hwy)) +
geom_point() + geom_smooth()
# in order to avoid code duplications
mpg %>% ggplot(mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth()
# geom smooth overrides the global data argument -> subcompact
mpg %>% ggplot((mapping = aes(x = displ, y = hwy)) +
# geom smooth overrides the global data argument -> subcompact
mpg %>% ggplot((mapping = aes(x = displ, y = hwy)) +
# more advanced smooth, grouped by drivetrain.
mpg %>% ggplot() + geom_smooth(mapping = aes(x = displ, y = hwy, group = drv, color = drv))
## GEOMS
# scatter plot
mpg %>% ggplot() + geom_point(mapping = aes(x = displ, y = hwy))
# smooth
mpg %>% ggplot() + geom_smooth(mapping = aes(x = displ, y = hwy))
# geom smooth overrides the global data argument -> subcompact
mpg %>% ggplot((mapping = aes(x = displ, y = hwy)) +
# geom smooth overrides the global data argument -> subcompact
mpg %>% ggplot(mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
# geom smooth overrides the global data argument -> subcompact
mpg %>% ggplot(mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
# geom smooth overrides the global data argument -> subcompact
mpg %>% ggplot(mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
## STATISTICAL TRANSFORMATIONS
# more diamonds are available with high quality cuts than with low quality cuts
diamonds %>% geom_bar(mapping = aes(x = cut))
## STATISTICAL TRANSFORMATIONS
# more diamonds are available with high quality cuts than with low quality cuts
diamonds %>% geom_bar(mapping = aes(x = cut))
## STATISTICAL TRANSFORMATIONS
# more diamonds are available with high quality cuts than with low quality cuts
diamonds %>% ggplot() + geom_bar(mapping = aes(x = cut))
diamonds %>% ggplot() + geom_bar(mapping = aes(x = cut, y = freq))
